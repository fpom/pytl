@@grammar :: tl

start =
    form:phi ["FAIR" fair:phi]$
    ;

phi =
    | mod:quantifier phi1:phi
    | mod:unarymod phi1:phi
    | phi1:expr mod:binarymod phi2:expr
    | phi1:expr
    ;

expr =
    | phi1:term op:boolop phi2:term
    | phi1:term
    ;

term =
    | "(" phi1:phi ")"
    | op:"~" phi1:term
    | phi1:atom
    ;

boolop =
    | "&"
    | "|"
    | "=>"
    | "<=>"
    ;

quantifier =
    op:/[AE]/ [ "{" act:actions "}" ]
    ;

unarymod =
    op:/[XFG]/ [ "{" act:actions "}" ]
    ;

binarymod =
    [ "{" act1:actions "}" ] op:/[UR]/ [ "{" act2:actions "}" ]
    ;

atom =
    /\b\w+\b|"[^"]+"|'[^']+'/
    ;

actions =
	| "(" act1:actions ")"
	| op:"~" act1:actions
    | act1:actions op:boolop act2:actions
	| act1:atom
    ;
