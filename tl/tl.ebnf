%import common.WS
%ignore WS

start : phi (BOOL phi)* (FAIR phi (BOOL phi)*)?

phi : sub                       -> nop
    | QUAN [act] sub            -> unary_mod
    | UMOD [act] sub            -> unary_mod
    | sub BMOD [act] sub        -> binary_mod

sub : ATOM                      -> atom
    | "~" sub                   -> not_op
    | "(" phi (BOOL phi)* ")"   -> bin_op
    
act : "{" exp (BOOL exp)* "}"   -> bin_op

exp : "(" exp (BOOL exp)* ")"   -> bin_op
	| "~" exp                   -> not_op
	| ATOM                      -> atom

FAIR.2 : "FAIR"
QUAN.1 : /[AE][XFG]?/
UMOD.1 : /[XFG]/
BMOD.1 : /[UR]/
ATOM.0 : /\b\w+\b|"[^"]+"|'[^']+'/
BOOL.0 : /&|\||=>|<=>/
