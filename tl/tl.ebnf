%import common.WS
%ignore WS

start : bool [FAIR bool]

bool : phi (BOOL phi)*                    -> bin_op

phi : (UMOD [act])* sub [BMOD [act] sub]  -> mod

sub : "(" phi (BOOL phi)* ")"             -> bin_op
    | "~" sub                             -> not_op
    | ATOM                                -> atom

act : "{" exp (BOOL exp)* "}"             -> bin_op

exp : "(" exp (BOOL exp)* ")"             -> bin_op
    | "~" exp                             -> not_op
    | ATOM                                -> atom

FAIR.2 : /\bFAIR\b/
UMOD.1 : /\b[AEXFG]+\b/
BMOD.1 : /\b[URWM]\b/
ATOM.0 : /\b\w+\b|"[^"]+"|'[^']+'/
BOOL.0 : /&|\||=>|<=>/
