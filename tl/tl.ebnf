%import common.WS
%ignore WS

start : [restrict] bool

bool : phi (BOOL phi)*                                -> bin_op

phi : (UMOD [restrict])* sub [BMOD [act] sub]         -> mod

restrict : (act | fair)+                              -> restrict

sub : "(" phi (BOOL phi)* ")"                         -> bin_op
    | "~" sub                                         -> not_op
    | ATOM                                            -> atom

act : "{" exp (BOOL exp)* "}"                         -> act

exp : "(" exp (BOOL exp)* ")"                         -> bin_op
    | "~" exp                                         -> not_op
    | ATOM                                            -> atom

fair : "[" FAIR (act | bool) [THEN (act | bool)] "]"  -> fair
    
FAIR.2 : /\b[UWS]FAIR\b/
THEN.2 : /\bTHEN\b/
UMOD.1 : /\b[AEXFG]+\b/
BMOD.1 : /\b[URWM]\b/
ATOM.0 : /\b\w+\b|"[^"]+"|'[^']+'/
BOOL.0 : /&|\||=>|<=>/
